openapi: 3.0.1
info:
  title: STD21030 API
  description: "Global description of my API"
  version: 1.0.0
servers:
  - url: https://STD21000.com
tags:
  - name: Students
    description: All About student

  - name: Courses
    description: All about courses
paths:
  /students:
    get:
      tags:
        - Students
      operationId: getStudents
      summary: Get all students
      description: Get all students with details
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
        400:
          description: Bad request
    post:
      tags:
        - Students
      operationId: createStudent
      summary: Create new student
      description: Create new student
      requestBody:
        description: Student to be created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStudent"
        required: true
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        400:
          description: Bad request
    put:
      tags:
        - Students
      summary: Add new student
      description: "Add new student"
      operationId: putStudent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateStudent"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              example: { "code": "OK", "message": "Student created" }
        400:
          description: "Badd request"
    patch:
      tags:
        - Students
      summary: Update a student info
      description: "Update a student"
      operationId: updateStudent
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer

      responses:
        "200":
          description: OK
          content:
            application/json:
              example: { "name": "Rabe", "birth-date": "22-07-01" }
        "400":
          description: Bad request

  /students/{id}:
    get:
      tags:
        - Students
      summary: Get student by identifier
      description: Get the student with the specified id
      operationId: getStudentById
      parameters:
        - name: id
          description: the id of the student
          required: true
          in: path
          schema:
            type: integer

      responses:
        200:
          description: the student that own the specified id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        400:
          description: Bad request
    delete:
      tags:
        - Students
      summary: Delete a student by identifier
      description: Delete a student
      operationId: deleteStudent
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: integer
      responses:
        200:
          description: a message
          content:
            application/json:
              schema:
                example: { message:student deleted }
        400:
          description: Bad request
  /courses:
    get:
      tags:
        - Courses
      summary: Get all courses
      description: Get all courses
      operationId: getCourses
      responses:
        200:
          description: List of all courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CreateNewCourses"
        400:
          description: Bad request
    post:
      tags:
        - Courses
      summary: Create new course
      description: Create new course
      operationId: createCourse
      responses:
        200:
          description: List of all courses
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNewCourses"
        400:
          description: Bad request
    put:
      tags:
        - Courses
      summary: Change all info about a course
      description: "Change all info about a course"
      operationId: addCourse
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        description: All info about the new course
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Courses"
      responses:
        "200":
          description: "OK"
        400:
          description: "Bad Request"
    patch:
      tags:
        - Courses
      summary: Modify a course
      description: Update existing course
      operationId: updateCourse
      parameters:
        - in: query
          name: id
          description: The course identifier
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              example: { "code": "prog2" }
        required: true
      responses:
        200:
          description: The course modified
          content:
            application/json:
              example:
                {
                  "id": 1,
                  "code": "prog2",
                  "name": "algorithmique",
                  "teacher": "Tokimahery ramarozaka",
                  "createdDate": "2022-07-15",
                }
        400:
          description: Bad request
  /courses/{id}:
    get:
      tags:
        - Courses
      summary: "Get course by identifier"
      description: "Get course by identifier"
      operationId: getCourse
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: The identified course
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Courses"
        400:
          description: "Bad request"
    delete:
      tags:
        - Courses
      summary: Delete course
      description: "Delete course"
      operationId: deleteCourseById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              example: { "code": OK, 'message':'Ressouce succesfully deleted' }
        400:
          description: Bad request

components:
  schemas:
    CreateStudent:
      type: object
      properties:
        name:
          type: string
          example: "Rakoto"
        birth_date:
          type: string
          format: date
          example: "2022-01-01"
    Student:
      allOf:
        - $ref: "#/components/schemas/CreateStudent"
      type: object
      properties:
        id:
          type: integer
          example: 10
    CreateNewCourses:
      type: object
      properties:
        code:
          type: string
          example: "prog1"
        name:
          type: string
          example: "algorithmique"
        teacher:
          type: string
          example: "Tokimahery ramarozaka"
        createdDate:
          type: string
          format: date
    Courses:
      allOf:
        - $ref: "#/components/schemas/CreateNewCourses"
      type: object
      properties:
        id:
          type: integer
          example: 1
